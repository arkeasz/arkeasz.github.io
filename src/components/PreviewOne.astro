---
import GHIcon from '../assets/gh.svg'
import LinkIcon from '../assets/link.svg'
let { title, description, preview, details, page, logo, tags } = Astro.props;

let newTags = tags ? tags.split(' ').filter(Boolean) : [];
---

<article class="preview-one">
    <div class="header">
        <div class="title">{title}</div>
        <div class="social">
            <a href={page}>
                <img src={LinkIcon.src} alt="page">
            </a>
            <a href={details}>
                <img src={GHIcon.src} alt="details">
            </a>
        </div>
    </div>
    <div class="content">
        <figure>
            <img src={preview} alt="preview">
            <figcaption class="description">
                { description }
            </figcaption>
        </figure>
    </div>
    <div class="footer">
        <picture class="logo">
            <img src={logo} alt="logo">
        </picture>
        <div class="tags">
            {newTags.map((el: string) => (
                <div class="tag">{el.toUpperCase()}</div>
            ))}
        </div>
    </div>
</article>

<style>
    .preview-one {
        display: flex;
        flex-direction: column;
        gap: .9rem;
        --padding: .7rem;
        padding: .5rem var(--padding);
        width: calc(100% - 2rem);
        outline: 1px solid #c4c4c4;
        background: #3900238b;
        border-radius: .4rem;

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: .9rem;

            .title {
                font-family: "Palanquin Dark", sans-serif;
                font-weight: 400;
                font-style: normal;
                font-size: .7rem;
            }

            .social {
                display: flex;
                width: 4rem;
                gap: .5rem;
                justify-content: flex-end;
                height: 80%;

                a {
                    height: 100%;
                    display: flex;
                    justify-content: center;
                    align-items: center;

                    img {
                        height: 100%;
                        object-fit: contain;
                    }
                }
            }
        }

        .content figure {
            display: flex;
            flex-direction: row-reverse;
            align-items: center;
        }

        .footer {
            height: 2rem;
            display: flex;
            justify-content: space-between;
            .logo {
                width: 2rem;
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            img {
                width: 100%;
                height: auto;
                object-fit: contain;
            }
            picture {
                align-self: flex-end;
            }

            .tags {
                display: flex;
            }
        }
    }

    figure {
        display: flex;
        justify-content: space-between;
        gap: 1rem;

        img {
            width: 50%;
            object-fit: contain;
        }
    }
    .tags {
        align-self: flex-end;
        display: flex;
        gap: .5rem;
        .tag {
            width: 3rem;
            height: 1.4rem;
            display: grid;
            place-items: center;
            cursor: default;
            font-size: .5rem;
            color: #fff;
            background: #76048f;
            border-radius: .2rem;
        }
    }
    .description {
        font-size: clamp(.3rem, 2.5vw,.6rem);
        width: 50%;
    }
</style>
